contract Contract {
    function main() {
        memory[0x40:0x60] = 0x80;
    
        if (msg.data.length >= 0x04) {
            var0 = msg.data[0x00:0x20] >> 0xe0;
        
            if (var0 == 0x258836fe) {
                // Dispatch table entry for 0x258836fe (unknown)
                var1 = msg.value;
            
                if (var1) { revert(memory[0x00:0x00]); }
            
                var1 = 0x0001b3;
                var2 = 0x0001d9;
                var3 = msg.data.length;
                var4 = 0x04;
                var2, var3 = func_417A(var3, var4);
                func_01D9(var2, var3);
                stop();
            } else if (var0 == 0x78c093cf) {
                // Dispatch table entry for 0x78c093cf (unknown)
                var1 = msg.value;
            
                if (var1) { revert(memory[0x00:0x00]); }
            
                var1 = 0x0001b3;
                var2 = 0x0001fe;
                var3 = msg.data.length;
                var4 = 0x04;
                var2 = func_413A(var3, var4);
                func_01FE(var2);
                stop();
            } else if (var0 == 0x8da5cb5b) {
                // Dispatch table entry for owner()
                var1 = msg.value;
            
                if (var1) { revert(memory[0x00:0x00]); }
            
                var1 = 0x00023a;
                var2 = 0x0000000000000000000000001863b74778cf5e1c9c482a1cdc2351362bd08611;
                var temp9 = memory[0x40:0x60];
                memory[temp9:temp9 + 0x20] = var2 & (0x01 << 0xa0) - 0x01;
                var temp10 = memory[0x40:0x60];
                return memory[temp10:temp10 + (temp9 + 0x20) - temp10];
            } else if (var0 == 0x920f5c84) {
                // Dispatch table entry for executeOperation(address[],uint256[],uint256[],address,bytes)
                var1 = msg.value;
            
                if (var1) { revert(memory[0x00:0x00]); }
            
                var1 = 0x00027c;
                var2 = 0x000276;
                var3 = msg.data.length;
                var4 = 0x04;
                var5 = 0x00;
                var6 = var5;
                var7 = 0x00;
                var8 = var7;
                var9 = 0x00;
            
                if (var3 - var4 i< 0xa0) { revert(memory[0x00:0x00]); }
            
                var var10 = msg.data[var4:var4 + 0x20];
                var var11 = 0xffffffffffffffff;
            
                if (var10 > var11) { revert(memory[0x00:0x00]); }
            
                var var12 = 0x0041f8;
                var var13 = var3;
                var var14 = var4 + var10;
                var12 = func_4024(var13, var14);
                var5 = var12;
                var10 = msg.data[var4 + 0x20:var4 + 0x20 + 0x20];
            
                if (var10 > var11) { revert(memory[0x00:0x00]); }
            
                var12 = 0x00421d;
                var13 = var3;
                var14 = var4 + var10;
                var12 = func_40A9(var13, var14);
                var6 = var12;
                var10 = msg.data[var4 + 0x40:var4 + 0x40 + 0x20];
            
                if (var10 > var11) { revert(memory[0x00:0x00]); }
            
                var12 = 0x004242;
                var13 = var3;
                var14 = var4 + var10;
                var12 = func_40A9(var13, var14);
                var7 = var12;
                var10 = msg.data[var4 + 0x60:var4 + 0x60 + 0x20];
                var12 = 0x004256;
                var13 = var10;
                func_4A62(var13);
                var temp11 = var11;
                var8 = var10;
                var11 = temp11;
                var10 = msg.data[var4 + 0x80:var4 + 0x80 + 0x20];
            
                if (var10 > var11) { revert(memory[0x00:0x00]); }
            
                var11 = 0x00427c;
                var12 = var3;
                var13 = var4 + var10;
            
            label_4110:
                var14 = 0x00;
            
                if (var13 + 0x1f i>= var12) { revert(memory[0x00:0x00]); }
            
                var var15 = 0x004133;
                var var16 = var12;
                var temp12 = var13;
                var var17 = msg.data[temp12:temp12 + 0x20];
                var var18 = temp12 + 0x20;
                var15 = func_3FC6(var16, var17, var18);
                var11 = var15;
                // Error: Could not resolve jump destination!
            } else if (var0 == 0xbbc1ef7a) {
                // Dispatch table entry for 0xbbc1ef7a (unknown)
                var1 = msg.value;
            
                if (var1) { revert(memory[0x00:0x00]); }
            
                var1 = 0x0001b3;
                var2 = 0x0002ac;
                var3 = msg.data.length;
                var4 = 0x04;
                var2 = func_4408(var3, var4);
            
                if (msg.sender == 0x0000000000000000000000001863b74778cf5e1c9c482a1cdc2351362bd08611 & (0x01 << 0xa0) - 0x01) {
                    var temp13 = var2;
                    var3 = 0x000cdc;
                    var4 = 0x01;
                    var6 = memory[temp13:temp13 + 0x20];
                    var5 = temp13 + 0x20;
                    var7 = var4;
                    var8 = 0x003f02;
                    var9 = storage[var7];
                    var8 = func_49C5(var9);
                    memory[0x00:0x20] = var7;
                    var7 = keccak256(memory[0x00:0x20]);
                    var temp14 = var7 + (var8 + 0x1f) / 0x20;
                    var8 = var5;
                    var5 = temp14;
                
                    if (!var6) {
                        storage[var4] = 0x00;
                        goto label_3F71;
                    } else if (0x1f < var6) {
                        var temp15 = var6;
                        storage[var4] = temp15 + temp15 + 0x01;
                    
                        if (!temp15) {
                        label_3F71:
                            var temp16 = var5;
                            var5 = 0x003f7f;
                            var6 = temp16;
                            var5 = func_3FAF(var6, var7);
                            var3 = var4;
                            // Error: Could not resolve jump destination!
                        } else {
                            var temp17 = var6;
                            var temp18 = var8;
                            var6 = temp18;
                            var8 = var6 + temp17;
                        
                            if (var8 <= var6) { goto label_3F71; }
                        
                        label_3F5E:
                            var temp19 = var6;
                            var temp20 = var7;
                            storage[temp20] = memory[temp19:temp19 + 0x20];
                            var6 = temp19 + 0x20;
                            var7 = temp20 + 0x01;
                            var8 = var8;
                        
                            if (var8 <= var6) { goto label_3F71; }
                            else { goto label_3F5E; }
                        }
                    } else {
                        var temp21 = var6;
                        storage[var4] = temp21 + temp21 | (memory[var8:var8 + 0x20] & ~0xff);
                        goto label_3F71;
                    }
                } else {
                    var temp22 = memory[0x40:0x60];
                    memory[temp22:temp22 + 0x20] = 0x461bcd << 0xe5;
                    var4 = temp22 + 0x04;
                    var3 = 0x00019f;
                    var3 = func_47F9(var4);
                    goto label_019F;
                }
            } else if (var0 == 0xf04f2707) {
                // Dispatch table entry for receiveFlashLoan(address[],uint256[],uint256[],bytes)
                var1 = msg.value;
            
                if (var1) { revert(memory[0x00:0x00]); }
            
                var1 = 0x0001b3;
                var2 = 0x0002d1;
                var3 = msg.data.length;
                var4 = 0x04;
                var5 = 0x00;
                var6 = var5;
                var7 = 0x00;
                var8 = var7;
            
                if (var3 - var4 i< 0x80) { revert(memory[0x00:0x00]); }
            
                var9 = msg.data[var4:var4 + 0x20];
                var10 = 0xffffffffffffffff;
            
                if (var9 > var10) { revert(memory[0x00:0x00]); }
            
                var11 = 0x0042c7;
                var12 = var3;
                var13 = var4 + var9;
                var11 = func_4024(var12, var13);
                var5 = var11;
                var9 = msg.data[var4 + 0x20:var4 + 0x20 + 0x20];
            
                if (var9 > var10) { revert(memory[0x00:0x00]); }
            
                var11 = 0x0042ec;
                var12 = var3;
                var13 = var4 + var9;
                var11 = func_40A9(var12, var13);
                var6 = var11;
                var9 = msg.data[var4 + 0x40:var4 + 0x40 + 0x20];
            
                if (var9 > var10) { revert(memory[0x00:0x00]); }
            
                var11 = 0x004311;
                var12 = var3;
                var13 = var4 + var9;
                var11 = func_40A9(var12, var13);
                var7 = var11;
                var9 = msg.data[var4 + 0x60:var4 + 0x60 + 0x20];
            
                if (var9 > var10) { revert(memory[0x00:0x00]); }
            
                var10 = 0x004337;
                var11 = var3;
                var12 = var4 + var9;
                goto label_4110;
            } else { revert(memory[0x00:0x00]); }
        } else if (msg.data.length) { revert(memory[0x00:0x00]); }
        else {
            var var0 = storage[0x07] & 0xff;
        
            if (!var0) {
                if (!var0) { stop(); }
            
            label_0093:
                var temp0 = memory[0x40:0x60];
                memory[temp0:temp0 + 0x20] = 0xfc57d4df << 0xe0;
                memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = 0x23f43c1002eeb2b146f286105a9a2fc75bf770a4;
                var0 = 0x00;
                var var1 = 0xb9e1c2b011f252b9931bba7fcee418b95b6bdc31;
                var var2 = 0xfc57d4df;
                var var3 = temp0 + 0x24;
                var var4 = 0x20;
                var var5 = memory[0x40:0x60];
                var var6 = var3 - var5;
                var var7 = var5;
                var var8 = var1;
                var var9 = !address(var8).code.length;
            
                if (var9) { revert(memory[0x00:0x00]); }
            
                var temp1;
                temp1, memory[var5:var5 + var4] = address(var8).staticcall.gas(msg.gas)(memory[var7:var7 + var6]);
                var4 = !temp1;
            
                if (!var4) {
                    var temp2 = memory[0x40:0x60];
                    var temp3 = returndata.length;
                    memory[0x40:0x60] = temp2 + (temp3 + 0x1f & ~0x1f);
                    var1 = 0x00012f;
                    var2 = temp2 + temp3;
                    var3 = temp2;
                    var1 = func_4485(var2, var3);
                    var0 = var1;
                    var1 = 0x2710;
                    var2 = 0x000147;
                    var4 = 0x0155cc;
                    var3 = storage[0x08];
                    var2 = func_495A(var3, var4);
                    var temp4 = var1;
                    var1 = 0x000153;
                    var temp5 = var2;
                    var2 = temp4;
                    var3 = temp5;
                    var1 = func_4937(var2, var3);
                
                    if (var0 >= var1) {
                        var0 = 0x0001b3;
                        func_02D7();
                        stop();
                    } else {
                        var temp6 = memory[0x40:0x60];
                        memory[temp6:temp6 + 0x20] = 0x461bcd << 0xe5;
                        memory[temp6 + 0x04:temp6 + 0x04 + 0x20] = 0x20;
                        memory[temp6 + 0x24:temp6 + 0x24 + 0x20] = 0x17;
                        memory[temp6 + 0x44:temp6 + 0x44 + 0x20] = 0x72617465206e6f74206368616e67656420656e6f756768000000000000000000;
                        var1 = temp6 + 0x64;
                    
                    label_019F:
                        var temp7 = memory[0x40:0x60];
                        revert(memory[temp7:temp7 + var1 - temp7]);
                    }
                } else {
                    var temp8 = returndata.length;
                    memory[0x00:0x00 + temp8] = returndata[0x00:0x00 + temp8];
                    revert(memory[0x00:0x00 + returndata.length]);
                }
            } else if (msg.sender != 0xfb6fe7802ba9290ef8b00ca16af4bc26eb663a28) { stop(); }
            else { goto label_0093; }
        }
    }
    
    function func_01D9(var arg0, var arg1) {
        if (msg.sender == 0x0000000000000000000000001863b74778cf5e1c9c482a1cdc2351362bd08611 & (0x01 << 0xa0) - 0x01) {
            var temp0 = memory[0x40:0x60];
            memory[temp0:temp0 + 0x20] = 0x70a08231 << 0xe0;
            memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = address(this);
            var var0 = arg0;
            var var1 = 0x00;
            var var2 = var0 & (0x01 << 0xa0) - 0x01;
            var var3 = 0x70a08231;
            var var4 = temp0 + 0x24;
            var var5 = 0x20;
            var var6 = memory[0x40:0x60];
            var var7 = var4 - var6;
            var var8 = var6;
            var var9 = 0x00;
            var var10 = var2;
            var var11 = !address(var10).code.length;
        
            if (var11) { revert(memory[0x00:0x00]); }
        
            var temp1;
            temp1, memory[var6:var6 + var5] = address(var10).call.gas(msg.gas).value(var9)(memory[var8:var8 + var7]);
            var5 = !temp1;
        
            if (!var5) {
                var temp2 = memory[0x40:0x60];
                var temp3 = returndata.length;
                memory[0x40:0x60] = temp2 + (temp3 + 0x1f & ~0x1f);
                var2 = 0x000902;
                var4 = temp2;
                var3 = var4 + temp3;
                var2 = func_4485(var3, var4);
                var temp4 = memory[0x40:0x60];
                memory[temp4:temp4 + 0x20] = 0xa9059cbb << 0xe0;
                var temp5 = var2;
                var1 = temp5;
                var2 = var0 & (0x01 << 0xa0) - 0x01;
                var3 = 0xa9059cbb;
                var4 = 0x000935;
                var5 = arg1;
                var6 = var1;
                var7 = temp4 + 0x04;
                var4 = func_4701(var5, var6, var7);
                var5 = 0x20;
                var6 = memory[0x40:0x60];
                var7 = var4 - var6;
                var8 = var6;
                var9 = 0x00;
                var10 = var2;
                var11 = !address(var10).code.length;
            
                if (var11) { revert(memory[0x00:0x00]); }
            
                var temp6;
                temp6, memory[var6:var6 + var5] = address(var10).call.gas(msg.gas).value(var9)(memory[var8:var8 + var7]);
                var5 = !temp6;
            
                if (!var5) {
                    var temp7 = memory[0x40:0x60];
                    var temp8 = returndata.length;
                    memory[0x40:0x60] = temp7 + (temp8 + 0x1f & ~0x1f);
                    var2 = 0x00098b;
                    var4 = temp7;
                    var3 = var4 + temp8;
                    var2 = func_43E4(var3, var4);
                    return;
                } else {
                    var temp9 = returndata.length;
                    memory[0x00:0x00 + temp9] = returndata[0x00:0x00 + temp9];
                    revert(memory[0x00:0x00 + returndata.length]);
                }
            } else {
                var temp10 = returndata.length;
                memory[0x00:0x00 + temp10] = returndata[0x00:0x00 + temp10];
                revert(memory[0x00:0x00 + returndata.length]);
            }
        } else {
            var temp11 = memory[0x40:0x60];
            memory[temp11:temp11 + 0x20] = 0x461bcd << 0xe5;
            var1 = temp11 + 0x04;
            var0 = 0x00019f;
            var0 = func_47F9(var1);
            var temp12 = memory[0x40:0x60];
            revert(memory[temp12:temp12 + var0 - temp12]);
        }
    }
    
    function func_01FE(var arg0) {
        if (msg.sender == 0x0000000000000000000000001863b74778cf5e1c9c482a1cdc2351362bd08611 & (0x01 << 0xa0) - 0x01) {
            var temp0 = memory[0x40:0x60];
            var temp1 = address(this).balance;
            var temp2;
            temp2, memory[temp0:temp0 + 0x00] = address(arg0 & (0x01 << 0xa0) - 0x01).call.gas(!temp1 * 0x08fc).value(temp1)(memory[temp0:temp0 + 0x00]);
            var var0 = !temp2;
        
            if (!var0) { return; }
        
            var temp3 = returndata.length;
            memory[0x00:0x00 + temp3] = returndata[0x00:0x00 + temp3];
            revert(memory[0x00:0x00 + returndata.length]);
        } else {
            var temp4 = memory[0x40:0x60];
            memory[temp4:temp4 + 0x20] = 0x461bcd << 0xe5;
            var var1 = temp4 + 0x04;
            var0 = 0x00019f;
            var0 = func_47F9(var1);
            var temp5 = memory[0x40:0x60];
            revert(memory[temp5:temp5 + var0 - temp5]);
        }
    }
    
    function func_02D7() {
        var temp0 = memory[0x40:0x60];
        memory[temp0:temp0 + 0x20] = 0x70a08231 << 0xe0;
        memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = 0x62bdc203403e7d44b75f357df0897f2e71f607f3;
        var var0 = 0x00;
        var var1 = storage[0x02] & (0x01 << 0xa0) - 0x01;
        var var2 = 0x70a08231;
        var var3 = temp0 + 0x24;
        var var4 = 0x20;
        var var5 = memory[0x40:0x60];
        var var6 = var3 - var5;
        var var7 = var5;
        var var8 = 0x00;
        var var9 = var1;
        var var10 = !address(var9).code.length;
    
        if (var10) { revert(memory[0x00:0x00]); }
    
        var temp1;
        temp1, memory[var5:var5 + var4] = address(var9).call.gas(msg.gas).value(var8)(memory[var7:var7 + var6]);
        var4 = !temp1;
    
        if (!var4) {
            var temp2 = memory[0x40:0x60];
            var temp3 = returndata.length;
            memory[0x40:0x60] = temp2 + (temp3 + 0x1f & ~0x1f);
            var1 = 0x00036d;
            var3 = temp2;
            var2 = var3 + temp3;
            var1 = func_4485(var2, var3);
            var temp4 = memory[0x40:0x60];
            memory[temp4:temp4 + 0x20] = 0x317afabb << 0xe2;
            memory[temp4 + 0x04:temp4 + 0x04 + 0x20] = var1;
            var0 = var1;
            var1 = 0x00;
            var2 = 0x62bdc203403e7d44b75f357df0897f2e71f607f3;
            var3 = 0xc5ebeaec;
            var4 = temp4 + 0x24;
            var5 = 0x20;
            var6 = memory[0x40:0x60];
            var7 = var4 - var6;
            var8 = var6;
            var9 = 0x00;
            var10 = var2;
            var var11 = !address(var10).code.length;
        
            if (var11) { revert(memory[0x00:0x00]); }
        
            var temp5;
            temp5, memory[var6:var6 + var5] = address(var10).call.gas(msg.gas).value(var9)(memory[var8:var8 + var7]);
            var5 = !temp5;
        
            if (!var5) {
                var temp6 = memory[0x40:0x60];
                var temp7 = returndata.length;
                memory[0x40:0x60] = temp6 + (temp7 + 0x1f & ~0x1f);
                var2 = 0x0003fc;
                var4 = temp6;
                var3 = var4 + temp7;
                var2 = func_4485(var3, var4);
                var1 = var2;
            
                if (!var1) {
                    var temp8 = memory[0x40:0x60];
                    memory[temp8:temp8 + 0x20] = 0x317afabb << 0xe2;
                    memory[temp8 + 0x04:temp8 + 0x04 + 0x20] = 0x5a1a66b6546186f00000;
                    var0 = 0x5a1a66b6546186f00000;
                    var1 = 0x00;
                    var2 = 0xe150e792e0a18c9984a0630f051a607dee3c265d;
                    var3 = 0xc5ebeaec;
                    var4 = temp8 + 0x24;
                    var5 = 0x20;
                    var6 = memory[0x40:0x60];
                    var7 = var4 - var6;
                    var8 = var6;
                    var9 = 0x00;
                    var10 = var2;
                    var11 = !address(var10).code.length;
                
                    if (var11) { revert(memory[0x00:0x00]); }
                
                    var temp9;
                    temp9, memory[var6:var6 + var5] = address(var10).call.gas(msg.gas).value(var9)(memory[var8:var8 + var7]);
                    var5 = !temp9;
                
                    if (!var5) {
                        var temp10 = memory[0x40:0x60];
                        var temp11 = returndata.length;
                        memory[0x40:0x60] = temp10 + (temp11 + 0x1f & ~0x1f);
                        var2 = 0x0004e8;
                        var4 = temp10;
                        var3 = var4 + temp11;
                        var2 = func_4485(var3, var4);
                        var1 = var2;
                    
                        if (!var1) {
                            var temp12 = memory[0x40:0x60];
                            memory[temp12:temp12 + 0x20] = 0x70a08231 << 0xe0;
                            memory[temp12 + 0x04:temp12 + 0x04 + 0x20] = 0x7adf374fa8b636420d41356b1f714f18228e7ae2;
                            var0 = 0x00;
                            var1 = storage[0x04] & (0x01 << 0xa0) - 0x01;
                            var2 = 0x70a08231;
                            var3 = temp12 + 0x24;
                            var4 = 0x20;
                            var5 = memory[0x40:0x60];
                            var6 = var3 - var5;
                            var7 = var5;
                            var8 = 0x00;
                            var9 = var1;
                            var10 = !address(var9).code.length;
                        
                            if (var10) { revert(memory[0x00:0x00]); }
                        
                            var temp13;
                            temp13, memory[var5:var5 + var4] = address(var9).call.gas(msg.gas).value(var8)(memory[var7:var7 + var6]);
                            var4 = !temp13;
                        
                            if (!var4) {
                                var temp14 = memory[0x40:0x60];
                                var temp15 = returndata.length;
                                memory[0x40:0x60] = temp14 + (temp15 + 0x1f & ~0x1f);
                                var1 = 0x0005d7;
                                var2 = temp14 + temp15;
                                var3 = temp14;
                                var1 = func_4485(var2, var3);
                                var temp16 = memory[0x40:0x60];
                                memory[temp16:temp16 + 0x20] = 0x317afabb << 0xe2;
                                memory[temp16 + 0x04:temp16 + 0x04 + 0x20] = var1;
                                var0 = var1;
                                var1 = 0x00;
                                var2 = 0x7adf374fa8b636420d41356b1f714f18228e7ae2;
                                var3 = 0xc5ebeaec;
                                var4 = temp16 + 0x24;
                                var5 = 0x20;
                                var6 = memory[0x40:0x60];
                                var7 = var4 - var6;
                                var8 = var6;
                                var9 = 0x00;
                                var10 = var2;
                                var11 = !address(var10).code.length;
                            
                                if (var11) { revert(memory[0x00:0x00]); }
                            
                                var temp17;
                                temp17, memory[var6:var6 + var5] = address(var10).call.gas(msg.gas).value(var9)(memory[var8:var8 + var7]);
                                var5 = !temp17;
                            
                                if (!var5) {
                                    var temp18 = memory[0x40:0x60];
                                    var temp19 = returndata.length;
                                    memory[0x40:0x60] = temp18 + (temp19 + 0x1f & ~0x1f);
                                    var2 = 0x000666;
                                    var4 = temp18;
                                    var3 = var4 + temp19;
                                    var2 = func_4485(var3, var4);
                                    var1 = var2;
                                
                                    if (!var1) {
                                        var temp20 = memory[0x40:0x60];
                                        memory[temp20:temp20 + 0x20] = 0x70a08231 << 0xe0;
                                        memory[temp20 + 0x04:temp20 + 0x04 + 0x20] = 0x5aa0197d0d3e05c4aa070dfa2f54cd67a447173a;
                                        var0 = 0x00;
                                        var1 = storage[0x05] & (0x01 << 0xa0) - 0x01;
                                        var2 = 0x70a08231;
                                        var3 = temp20 + 0x24;
                                        var4 = 0x20;
                                        var5 = memory[0x40:0x60];
                                        var6 = var3 - var5;
                                        var7 = var5;
                                        var8 = 0x00;
                                        var9 = var1;
                                        var10 = !address(var9).code.length;
                                    
                                        if (var10) { revert(memory[0x00:0x00]); }
                                    
                                        var temp21;
                                        temp21, memory[var5:var5 + var4] = address(var9).call.gas(msg.gas).value(var8)(memory[var7:var7 + var6]);
                                        var4 = !temp21;
                                    
                                        if (!var4) {
                                            var temp22 = memory[0x40:0x60];
                                            var temp23 = returndata.length;
                                            memory[0x40:0x60] = temp22 + (temp23 + 0x1f & ~0x1f);
                                            var1 = 0x000750;
                                            var3 = temp22;
                                            var2 = var3 + temp23;
                                            var1 = func_4485(var2, var3);
                                            var temp24 = memory[0x40:0x60];
                                            memory[temp24:temp24 + 0x20] = 0x317afabb << 0xe2;
                                            memory[temp24 + 0x04:temp24 + 0x04 + 0x20] = var1;
                                            var0 = var1;
                                            var1 = 0x00;
                                            var2 = 0x5aa0197d0d3e05c4aa070dfa2f54cd67a447173a;
                                            var3 = 0xc5ebeaec;
                                            var4 = temp24 + 0x24;
                                            var5 = 0x20;
                                            var6 = memory[0x40:0x60];
                                            var7 = var4 - var6;
                                            var8 = var6;
                                            var9 = 0x00;
                                            var10 = var2;
                                            var11 = !address(var10).code.length;
                                        
                                            if (var11) { revert(memory[0x00:0x00]); }
                                        
                                            var temp25;
                                            temp25, memory[var6:var6 + var5] = address(var10).call.gas(msg.gas).value(var9)(memory[var8:var8 + var7]);
                                            var5 = !temp25;
                                        
                                            if (!var5) {
                                                var temp26 = memory[0x40:0x60];
                                                var temp27 = returndata.length;
                                                memory[0x40:0x60] = temp26 + (temp27 + 0x1f & ~0x1f);
                                                var2 = 0x0007df;
                                                var4 = temp26;
                                                var3 = var4 + temp27;
                                                var2 = func_4485(var3, var4);
                                                var1 = var2;
                                            
                                                if (!var1) { return; }
                                            
                                                var temp28 = memory[0x40:0x60];
                                                memory[temp28:temp28 + 0x20] = 0x461bcd << 0xe5;
                                                memory[temp28 + 0x04:temp28 + 0x04 + 0x20] = 0x20;
                                                memory[temp28 + 0x24:temp28 + 0x24 + 0x20] = 0x1b;
                                                memory[temp28 + 0x44:temp28 + 0x44 + 0x20] = 0x63546f6b656e5f61674555522e626f72726f77206661696c6564210000000000;
                                                var2 = temp28 + 0x64;
                                            
                                            label_019F:
                                                var temp29 = memory[0x40:0x60];
                                                revert(memory[temp29:temp29 + var2 - temp29]);
                                            } else {
                                                var temp30 = returndata.length;
                                                memory[0x00:0x00 + temp30] = returndata[0x00:0x00 + temp30];
                                                revert(memory[0x00:0x00 + returndata.length]);
                                            }
                                        } else {
                                            var temp31 = returndata.length;
                                            memory[0x00:0x00 + temp31] = returndata[0x00:0x00 + temp31];
                                            revert(memory[0x00:0x00 + returndata.length]);
                                        }
                                    } else {
                                        var temp32 = memory[0x40:0x60];
                                        memory[temp32:temp32 + 0x20] = 0x461bcd << 0xe5;
                                        memory[temp32 + 0x04:temp32 + 0x04 + 0x20] = 0x20;
                                        memory[temp32 + 0x24:temp32 + 0x24 + 0x20] = 0x1a;
                                        memory[temp32 + 0x44:temp32 + 0x44 + 0x20] = 0x63546f6b656e5f6a4742502e626f72726f77206661696c656421000000000000;
                                        var2 = temp32 + 0x64;
                                        goto label_019F;
                                    }
                                } else {
                                    var temp33 = returndata.length;
                                    memory[0x00:0x00 + temp33] = returndata[0x00:0x00 + temp33];
                                    revert(memory[0x00:0x00 + returndata.length]);
                                }
                            } else {
                                var temp34 = returndata.length;
                                memory[0x00:0x00 + temp34] = returndata[0x00:0x00 + temp34];
                                revert(memory[0x00:0x00 + returndata.length]);
                            }
                        } else {
                            var temp35 = memory[0x40:0x60];
                            memory[temp35:temp35 + 0x20] = 0x461bcd << 0xe5;
                            memory[temp35 + 0x04:temp35 + 0x04 + 0x20] = 0x20;
                            memory[temp35 + 0x24:temp35 + 0x24 + 0x20] = 0x1a;
                            memory[temp35 + 0x44:temp35 + 0x44 + 0x20] = 0x63546f6b656e5f6a4555522e626f72726f77206661696c656421000000000000;
                            var2 = temp35 + 0x64;
                            goto label_019F;
                        }
                    } else {
                        var temp36 = returndata.length;
                        memory[0x00:0x00 + temp36] = returndata[0x00:0x00 + temp36];
                        revert(memory[0x00:0x00 + returndata.length]);
                    }
                } else {
                    var temp37 = memory[0x40:0x60];
                    memory[temp37:temp37 + 0x20] = 0x461bcd << 0xe5;
                    memory[temp37 + 0x04:temp37 + 0x04 + 0x20] = 0x20;
                    memory[temp37 + 0x24:temp37 + 0x24 + 0x20] = 0x1a;
                    memory[temp37 + 0x44:temp37 + 0x44 + 0x20] = 0x63546f6b656e5f6a4348462e626f72726f77206661696c656421000000000000;
                    var2 = temp37 + 0x64;
                    goto label_019F;
                }
            } else {
                var temp38 = returndata.length;
                memory[0x00:0x00 + temp38] = returndata[0x00:0x00 + temp38];
                revert(memory[0x00:0x00 + returndata.length]);
            }
        } else {
            var temp39 = returndata.length;
            memory[0x00:0x00 + temp39] = returndata[0x00:0x00 + temp39];
            revert(memory[0x00:0x00 + returndata.length]);
        }
    }
    
    function func_3FAF(var arg0, var arg1) returns (var r0) {
        if (arg0 <= arg1) {
        label_3F7F:
            return arg0;
        } else {
        label_3FBA:
            var temp0 = arg1;
            storage[temp0] = 0x00;
            arg1 = temp0 + 0x01;
        
            if (arg0 <= arg1) { goto label_3F7F; }
            else { goto label_3FBA; }
        }
    }
    
    function func_3FC6(var arg0, var arg1, var arg2) returns (var r0) {
        var var0 = 0x00;
    
        if (arg1 <= 0xffffffffffffffff) {
            var var1 = 0x003ff8;
            var var2 = (arg1 + 0x1f & ~0x1f) + 0x20;
            var1 = func_48C1(var2);
            var0 = var1;
            var temp0 = arg1;
            memory[var0:var0 + 0x20] = temp0;
        
            if (arg2 + temp0 > arg0) { revert(memory[0x00:0x00]); }
        
            var temp1 = arg1;
            var temp2 = var0;
            memory[temp2 + 0x20:temp2 + 0x20 + temp1] = msg.data[arg2:arg2 + temp1];
            memory[temp2 + temp1 + 0x20:temp2 + temp1 + 0x20 + 0x20] = 0x00;
            return temp2;
        } else {
            var1 = 0x003fe3;
            memory[0x00:0x20] = 0x4e487b71 << 0xe0;
            memory[0x04:0x24] = 0x41;
            revert(memory[0x00:0x24]);
        }
    }
    
    function func_4024(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
    
        if (arg1 + 0x1f i>= arg0) { revert(memory[0x00:0x00]); }
    
        var var1 = msg.data[arg1:arg1 + 0x20];
        var var2 = 0x20;
        var var3 = 0x00404f;
        var var4 = 0x004049;
        var var5 = var1;
        var4 = func_48F5(var5);
        var3 = func_4049(var4);
        var temp0 = var3;
        var4 = temp0;
        var temp1 = var1;
        memory[var4:var4 + 0x20] = temp1;
        var temp2 = var2;
        var3 = var4 + temp2;
        var temp3 = arg1;
        var5 = temp3 + temp2;
    
        if (temp3 + (temp1 << 0x05) + temp2 > arg0) { revert(memory[0x00:0x00]); }
    
        var var6 = 0x00;
    
        if (var6 >= var1) {
        label_409C:
            return var4;
        } else {
        label_407D:
            var var7 = msg.data[var5:var5 + 0x20];
            var var8 = 0x004089;
            var var9 = var7;
            func_4A62(var9);
            var temp4 = var3;
            memory[temp4:temp4 + 0x20] = var7;
            var temp5 = var2;
            var3 = temp5 + temp4;
            var5 = temp5 + var5;
            var6 = var6 + 0x01;
        
            if (var6 >= var1) { goto label_409C; }
            else { goto label_407D; }
        }
    }
    
    function func_4049(var arg0) returns (var r0) {
        r0 = func_48C1(arg0);
        // Error: Could not resolve method call return address!
    }
    
    function func_40A9(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
    
        if (arg1 + 0x1f i>= arg0) { revert(memory[0x00:0x00]); }
    
        var var1 = msg.data[arg1:arg1 + 0x20];
        var var2 = 0x20;
        var var3 = 0x0040ce;
        var var4 = 0x004049;
        var var5 = var1;
        var4 = func_48F5(var5);
        var3 = func_4049(var4);
        var temp0 = var3;
        var4 = temp0;
        var temp1 = var1;
        memory[var4:var4 + 0x20] = temp1;
        var temp2 = var2;
        var3 = var4 + temp2;
        var temp3 = arg1;
        var5 = temp3 + temp2;
    
        if (temp3 + (temp1 << 0x05) + temp2 > arg0) { revert(memory[0x00:0x00]); }
    
        var var6 = 0x00;
    
        if (var6 >= var1) {
        label_409C:
            return var4;
        } else {
        label_40FC:
            var temp4 = var5;
            var temp5 = var3;
            memory[temp5:temp5 + 0x20] = msg.data[temp4:temp4 + 0x20];
            var temp6 = var2;
            var3 = temp6 + temp5;
            var5 = temp6 + temp4;
            var6 = var6 + 0x01;
        
            if (var6 >= var1) { goto label_409C; }
            else { goto label_40FC; }
        }
    }
    
    function func_413A(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
    
        if (arg0 - arg1 i< 0x20) { revert(memory[0x00:0x00]); }
    
        var var1 = msg.data[arg1:arg1 + 0x20];
        var var2 = 0x004133;
        var var3 = var1;
        func_4A62(var3);
        return var1;
    }
    
    function func_417A(var arg0, var arg1) returns (var r0, var arg0) {
        var var0 = 0x00;
        var var1 = var0;
    
        if (arg0 - arg1 i< 0x40) { revert(memory[0x00:0x00]); }
    
        var var2 = msg.data[arg1:arg1 + 0x20];
        var var3 = 0x00419b;
        var var4 = var2;
        func_4A62(var4);
        var0 = var2;
        var2 = msg.data[arg1 + 0x20:arg1 + 0x20 + 0x20];
        var3 = 0x0041ad;
        var4 = var2;
        func_4A62(var4);
        arg0 = var2;
        r0 = var0;
        return r0, arg0;
    }
    
    function func_43E4(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
    
        if (arg0 - arg1 i< 0x20) { revert(memory[0x00:0x00]); }
    
        var temp0 = memory[arg1:arg1 + 0x20];
        var var1 = temp0;
    
        if (var1 == !!var1) { return var1; }
        else { revert(memory[0x00:0x00]); }
    }
    
    function func_4408(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
    
        if (arg0 - arg1 i< 0x20) { revert(memory[0x00:0x00]); }
    
        var var1 = msg.data[arg1:arg1 + 0x20];
    
        if (var1 > 0xffffffffffffffff) { revert(memory[0x00:0x00]); }
    
        var temp0 = arg1 + var1;
        var1 = temp0;
    
        if (arg0 i<= var1 + 0x1f) { revert(memory[0x00:0x00]); }
    
        var var2 = 0x004456;
        var var3 = arg0;
        var temp1 = var1;
        var var4 = msg.data[temp1:temp1 + 0x20];
        var var5 = temp1 + 0x20;
        return func_3FC6(var3, var4, var5);
    }
    
    function func_4485(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
    
        if (arg0 - arg1 i>= 0x20) { return memory[arg1:arg1 + 0x20]; }
        else { revert(memory[0x00:0x00]); }
    }
    
    function func_4701(var arg0, var arg1, var arg2) returns (var r0) {
        var temp0 = arg2;
        memory[temp0:temp0 + 0x20] = arg0 & (0x01 << 0xa0) - 0x01;
        memory[temp0 + 0x20:temp0 + 0x20 + 0x20] = arg1;
        return temp0 + 0x40;
    }
    
    function func_47F9(var arg0) returns (var r0) {
        var temp0 = arg0;
        memory[temp0:temp0 + 0x20] = 0x20;
        memory[temp0 + 0x20:temp0 + 0x20 + 0x20] = 0x06;
        memory[temp0 + 0x40:temp0 + 0x40 + 0x20] = 0x10b7bbb732b9 << 0xd1;
        return temp0 + 0x60;
    }
    
    function func_48C1(var arg0) returns (var r0) {
        var temp0 = memory[0x40:0x60];
        var var0 = temp0;
        var temp1 = var0 + (arg0 + 0x1f & ~0x1f);
        var var1 = temp1;
    
        if (!((var1 < var0) | (var1 > 0xffffffffffffffff))) {
            memory[0x40:0x60] = var1;
            return var0;
        } else {
            var var2 = 0x0048ed;
            memory[0x00:0x20] = 0x4e487b71 << 0xe0;
            memory[0x04:0x24] = 0x41;
            revert(memory[0x00:0x24]);
        }
    }
    
    function func_48F5(var arg0) returns (var r0) {
        var var0 = 0x00;
    
        if (arg0 <= 0xffffffffffffffff) { return (arg0 << 0x05) + 0x20; }
    
        var var1 = 0x004912;
        memory[0x00:0x20] = 0x4e487b71 << 0xe0;
        memory[0x04:0x24] = 0x41;
        revert(memory[0x00:0x24]);
    }
    
    function func_4937(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
    
        if (arg0) { return arg1 / arg0; }
    
        memory[0x00:0x20] = 0x4e487b71 << 0xe0;
        memory[0x04:0x24] = 0x12;
        revert(memory[0x00:0x24]);
    }
    
    function func_495A(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
        var temp0 = arg1;
    
        if (!(!!temp0 & (arg0 > ~0x00 / temp0))) { return arg1 * arg0; }
    
        var var1 = 0x004977;
        memory[0x00:0x20] = 0x4e487b71 << 0xe0;
        memory[0x04:0x24] = 0x11;
        revert(memory[0x00:0x24]);
    }
    
    function func_49C5(var arg0) returns (var r0) {
        var temp0 = arg0;
        var var0 = temp0 >> 0x01;
        var var1 = temp0 & 0x01;
    
        if (!var1) {
            var temp1 = var0 & 0x7f;
            var0 = temp1;
        
            if (var1 != (var0 < 0x20)) { goto label_49FC; }
            else { goto label_49E7; }
        } else if (var1 != (var0 < 0x20)) {
        label_49FC:
            return var0;
        } else {
        label_49E7:
            memory[0x00:0x20] = 0x4e487b71 << 0xe0;
            memory[0x04:0x24] = 0x22;
            revert(memory[0x00:0x24]);
        }
    }
    
    function func_4A62(var arg0) {
        var temp0 = arg0;
    
        if (temp0 == temp0 & (0x01 << 0xa0) - 0x01) { return; }
        else { revert(memory[0x00:0x00]); }
    }
}